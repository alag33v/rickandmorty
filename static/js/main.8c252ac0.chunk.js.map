{"version":3,"sources":["api/api.js","redux/ducks/charactersDucks.js","redux/ducks/locationsDucks.js","redux/ducks/episodesDucks.js","redux/ducks/index.js","redux/store.js","styles/components/StyledHeader.js","assets/images/rickandmorty.png","components/Header.js","styles/components/StyledCharacterItem.js","components/CharacterItem.js","styles/components/StyledLocationItem.js","components/LocationItem.js","styles/components/StyledEpisodeItem.js","components/EpisodeItem.js","styles/pages/StyledCharacters.js","pages/Characters.js","styles/pages/StyledLocations.js","pages/Locations.js","styles/pages/StyledEpisodes.js","pages/Episodes.js","styles/GlobalStyle.js","App.js","index.js"],"names":["instance","axios","create","baseURL","charactersAPI","get","response","data","url","searchCharacter","results","locationsAPI","searchPlanet","episodesAPI","searchEpisode","ADD_CHARACTERS","ADD_MORE_CHARACTERS","SEARCH_CHARACTERS","CHECK_URL","initialState","characters","checkUrl","str","type","payload","getCharacters","dispatch","a","info","next","arr","charactersReducer","state","action","ADD_LOCATIONS","ADD_MORE_LOCATIONS","SEARCH_LOCATIONS","locations","getLocations","ADD_EPISODES","ADD_MORE_EPISODES","SEARCH_EPISODES","episodes","getEpisodes","episodesReducer","rootReducer","combineReducers","locationsReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","StyledHeader","styled","header","Header","className","src","logo","alt","id","title","path","map","item","to","StyledCharacterItem","div","CharacterItem","match","history","useHistory","character","useSelector","filter","String","params","name","image","gender","species","status","location","onClick","push","StyledLocationItem","LocationsItem","dimension","StyledEpisodeItem","EpisodeItem","episode","air_date","StyledCharacters","Characters","useState","loadMore","setLoadMore","search","setSearch","useDispatch","useEffect","observer","useRef","lastCharacter","useCallback","current","disconnect","IntersectionObserver","entries","isIntersecting","getMoreCharacters","observe","onEdit","onChange","e","target","value","input","placeholder","preventDefault","trim","index","length","ref","StyledLocations","Locations","lastLocation","getMoreLocations","searchLocation","StyledEpisodes","Episodes","lastEpisode","getMoreEpisodes","GlobalStyle","createGlobalStyle","normalize","App","exact","component","LocationItem","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8c252ac0.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://rickandmortyapi.com/api/'\r\n});\r\n\r\nexport const charactersAPI = {\r\n  async fetchCharacters() {\r\n    const response = await instance.get(`character?page=1`);\r\n    return response.data;\r\n  },\r\n  async fetchMoreCharacters(url) {\r\n    const response = await instance.get(`${url}`);\r\n    return response.data;\r\n  },\r\n  async search(searchCharacter) {\r\n    const response = await instance.get(`character/?name=${searchCharacter}`);\r\n    return response.data.results;\r\n  }\r\n};\r\n\r\nexport const locationsAPI = {\r\n  async fetchCharacters() {\r\n    const response = await instance.get(`location?page=1`);\r\n    return response.data;\r\n  },\r\n  async fetchMoreLocations(url) {\r\n    const response = await instance.get(`${url}`);\r\n    return response.data;\r\n  },\r\n  async search(searchPlanet) {\r\n    const response = await instance.get(`location/?name=${searchPlanet}`);\r\n    return response.data.results;\r\n  }\r\n};\r\n\r\nexport const episodesAPI = {\r\n  async fetchEpisodes() {\r\n    const response = await instance.get(`episode?page=1`);\r\n    return response.data;\r\n  },\r\n  async fetchMoreEpisodes(url) {\r\n    const response = await instance.get(`${url}`);\r\n    return response.data;\r\n  },\r\n  async search(searchEpisode) {\r\n    const response = await instance.get(`episode/?name=${searchEpisode}`);\r\n    return response.data.results;\r\n  }\r\n};\r\n","import { charactersAPI } from '../../api/api';\r\n\r\n// Actions\r\nconst ADD_CHARACTERS = 'characters/ADD_CHARACTERS';\r\nconst ADD_MORE_CHARACTERS = 'characters/ADD_MORE_CHARACTERS';\r\nconst SEARCH_CHARACTERS = 'characters/SEARCH_CHARACTERS';\r\nconst CHECK_URL = 'characters/CHECK_URL';\r\n\r\n// Reducer\r\nconst initialState = {\r\n  characters: [],\r\n  url: ''\r\n};\r\n\r\nconst charactersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_CHARACTERS:\r\n      return { ...state, characters: action.payload };\r\n    case ADD_MORE_CHARACTERS:\r\n      return { ...state, characters: [...state.characters, ...action.payload] };\r\n    case SEARCH_CHARACTERS:\r\n      return { ...state, characters: action.payload };\r\n    case CHECK_URL:\r\n      return { ...state, url: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Action Creators\r\nconst addCharacters = arr => ({\r\n  type: ADD_CHARACTERS,\r\n  payload: arr\r\n});\r\n\r\nconst addMoreCharacters = arr => ({\r\n  type: ADD_MORE_CHARACTERS,\r\n  payload: arr\r\n});\r\n\r\nconst searchCharacters = arr => ({\r\n  type: SEARCH_CHARACTERS,\r\n  payload: arr\r\n});\r\n\r\nconst checkUrl = str => ({\r\n  type: CHECK_URL,\r\n  payload: str\r\n});\r\n\r\n// Thunks\r\nexport const getCharacters = () => async dispatch => {\r\n  const data = await charactersAPI.fetchCharacters();\r\n  dispatch(checkUrl(data.info.next));\r\n  dispatch(addCharacters(data.results));\r\n};\r\n\r\nexport const getMoreCharacters = url => async dispatch => {\r\n  const data = await charactersAPI.fetchMoreCharacters(url);\r\n  dispatch(checkUrl(data.info.next));\r\n  dispatch(addMoreCharacters(data.results));\r\n};\r\n\r\nexport const getSearchCharacters = searchCharacter => async dispatch => {\r\n  const data = await charactersAPI.search(searchCharacter);\r\n  dispatch(searchCharacters(data));\r\n};\r\n\r\nexport default charactersReducer;\r\n","import { locationsAPI } from '../../api/api';\r\n\r\n// Actions\r\nconst ADD_LOCATIONS = 'locations/ADD_LOCATIONS';\r\nconst ADD_MORE_LOCATIONS = 'locations/ADD_MORE_LOCATIONS';\r\nconst SEARCH_LOCATIONS = 'locations/SEARCH_LOCATIONS';\r\nconst CHECK_URL = 'locations/CHECK_URL';\r\n\r\n// Reducer\r\nconst initialState = {\r\n  locations: [],\r\n  url: ''\r\n};\r\n\r\nconst charactersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_LOCATIONS:\r\n      return { ...state, locations: action.payload };\r\n    case ADD_MORE_LOCATIONS:\r\n      return { ...state, locations: [...state.locations, ...action.payload] };\r\n    case SEARCH_LOCATIONS:\r\n      return { ...state, locations: action.payload };\r\n    case CHECK_URL:\r\n      return { ...state, url: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Action Creators\r\nconst addLocations = arr => ({\r\n  type: ADD_LOCATIONS,\r\n  payload: arr\r\n});\r\n\r\nconst addMoreLocations = arr => ({\r\n  type: ADD_MORE_LOCATIONS,\r\n  payload: arr\r\n});\r\n\r\nconst searchLocations = arr => ({\r\n  type: SEARCH_LOCATIONS,\r\n  payload: arr\r\n});\r\n\r\nconst checkUrl = str => ({\r\n  type: CHECK_URL,\r\n  payload: str\r\n});\r\n\r\n// Thunks\r\nexport const getLocations = () => async dispatch => {\r\n  const data = await locationsAPI.fetchCharacters();\r\n  dispatch(checkUrl(data.info.next));\r\n  dispatch(addLocations(data.results));\r\n};\r\n\r\nexport const getMoreLocations = url => async dispatch => {\r\n  const data = await locationsAPI.fetchMoreLocations(url);\r\n  dispatch(checkUrl(data.info.next));\r\n  dispatch(addMoreLocations(data.results));\r\n};\r\n\r\nexport const getSearchLocations = searchLocation => async dispatch => {\r\n  const data = await locationsAPI.search(searchLocation);\r\n  dispatch(searchLocations(data));\r\n};\r\n\r\nexport default charactersReducer;\r\n","import { episodesAPI } from '../../api/api';\r\n\r\n// Actions\r\nconst ADD_EPISODES = 'episodes/ADD_EPISODES';\r\nconst ADD_MORE_EPISODES = 'episodes/ADD_MORE_EPISODES';\r\nconst SEARCH_EPISODES = 'episodes/SEARCH_EPISODES';\r\nconst CHECK_URL = 'episodes/CHECK_URL';\r\n\r\n// Reducer\r\nconst initialState = {\r\n  episodes: [],\r\n  url: ''\r\n};\r\n\r\nconst episodesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_EPISODES:\r\n      return { ...state, episodes: action.payload };\r\n    case ADD_MORE_EPISODES:\r\n      return { ...state, episodes: [...state.episodes, ...action.payload] };\r\n    case SEARCH_EPISODES:\r\n      return { ...state, episodes: action.payload };\r\n    case CHECK_URL:\r\n      return { ...state, url: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Action Creators\r\nconst addEpisodes = arr => ({\r\n  type: ADD_EPISODES,\r\n  payload: arr\r\n});\r\n\r\nconst addMoreEpisodes = arr => ({\r\n  type: ADD_MORE_EPISODES,\r\n  payload: arr\r\n});\r\n\r\nconst searchEpisodes = arr => ({\r\n  type: SEARCH_EPISODES,\r\n  payload: arr\r\n});\r\n\r\nconst checkUrl = str => ({\r\n  type: CHECK_URL,\r\n  payload: str\r\n});\r\n\r\n// Thunks\r\nexport const getEpisodes = () => async dispatch => {\r\n  const data = await episodesAPI.fetchEpisodes();\r\n  dispatch(checkUrl(data.info.next));\r\n  dispatch(addEpisodes(data.results));\r\n};\r\n\r\nexport const getMoreEpisodes = url => async dispatch => {\r\n  const data = await episodesAPI.fetchMoreEpisodes(url);\r\n  dispatch(checkUrl(data.info.next));\r\n  dispatch(addMoreEpisodes(data.results));\r\n};\r\n\r\nexport const getSearchEpisodes = searchCharacter => async dispatch => {\r\n  const data = await episodesAPI.search(searchCharacter);\r\n  dispatch(searchEpisodes(data));\r\n};\r\n\r\nexport default episodesReducer;\r\n","import { combineReducers } from 'redux';\r\nimport charactersReducer from './charactersDucks';\r\nimport locationsReducer from './locationsDucks';\r\nimport episodesReducer from './episodesDucks';\r\n\r\nconst rootReducer = combineReducers({\r\n  characters: charactersReducer,\r\n  locations: locationsReducer,\r\n  episodes: episodesReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './ducks';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledHeader = styled.header`\r\n  .logo {\r\n    width: 300px;\r\n    max-width: 100%;\r\n    margin: 20px auto 50px;\r\n    display: block;\r\n  }\r\n\r\n  .nav__list {\r\n    display: flex;\r\n    justify-content: center;\r\n    padding: 0;\r\n\r\n    li {\r\n      font-size: 24px;\r\n      font-weight: 700;\r\n      list-style: none;\r\n      margin: 0 20px;\r\n\r\n      @media (max-width: 500px) {\r\n        font-size: 20px;\r\n      }\r\n\r\n      @media (max-width: 400px) {\r\n        font-size: 18px;\r\n        margin: 0 10px;\r\n      }\r\n    }\r\n\r\n    a {\r\n      color: #fff;\r\n      text-decoration: none;\r\n      transition: 0.3s;\r\n\r\n      &:hover {\r\n        color: gold;\r\n      }\r\n    }\r\n\r\n    .active {\r\n      color: gold;\r\n    }\r\n  }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/rickandmorty.2bacb95e.png\";","import { NavLink } from 'react-router-dom';\r\nimport { StyledHeader } from '../styles/components/StyledHeader';\r\nimport logo from '../assets/images/rickandmorty.png';\r\n\r\nconst Header = () => {\r\n  const headerItems = [\r\n    {\r\n      id: '0',\r\n      title: 'Characters',\r\n      path: '/characters'\r\n    },\r\n    {\r\n      id: '1',\r\n      title: 'Locations',\r\n      path: '/locations'\r\n    },\r\n    {\r\n      id: '2',\r\n      title: 'Episodes',\r\n      path: '/episodes'\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <StyledHeader>\r\n      <img className='logo' src={logo} alt='Rick and Morty' />\r\n      <nav>\r\n        <ul className='nav__list'>\r\n          {headerItems.map(item => (\r\n            <li key={item.id}>\r\n              <NavLink to={item.path}>{item.title}</NavLink>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </nav>\r\n    </StyledHeader>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledCharacterItem = styled.div`\r\n  position: relative;\r\n\r\n  .title {\r\n    font-size: 24px;\r\n    text-align: center;\r\n    margin: 50px 0 25px;\r\n  }\r\n\r\n  .character__wrapper {\r\n    display: flex;\r\n    justify-content: center;\r\n\r\n    @media (max-width: 550px) {\r\n      flex-direction: column;\r\n    }\r\n  }\r\n\r\n  img {\r\n    width: 300px;\r\n    max-width: 100%;\r\n    border-radius: 5px;\r\n    display: block;\r\n\r\n    @media (max-width: 550px) {\r\n      margin: 0 auto 20px;\r\n    }\r\n  }\r\n\r\n  .character__info {\r\n    margin-left: 20px;\r\n\r\n    @media (max-width: 550px) {\r\n      margin-left: 20%;\r\n    }\r\n\r\n    @media (max-width: 425px) {\r\n      margin-left: 10%;\r\n    }\r\n\r\n    @media (max-width: 375px) {\r\n      margin-left: 5%;\r\n    }\r\n\r\n    @media (max-width: 320px) {\r\n      margin-left: 1%;\r\n    }\r\n\r\n    span {\r\n      font-size: 16px;\r\n      margin-bottom: 10px;\r\n      display: block;\r\n    }\r\n  }\r\n\r\n  .back {\r\n    fill: #ccc;\r\n    width: 30px;\r\n    height: 30px;\r\n    top: 0;\r\n    left: 0;\r\n    position: absolute;\r\n    transition: 0.3s;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n      fill: #fff;\r\n    }\r\n  }\r\n`;\r\n","import { useHistory } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { BiArrowBack } from 'react-icons/bi';\r\nimport { StyledCharacterItem } from '../styles/components/StyledCharacterItem';\r\n\r\nconst CharacterItem = ({ match }) => {\r\n  const history = useHistory();\r\n  const characters = useSelector(({ characters }) => characters.characters);\r\n\r\n  const charactersFilter = characters.filter(\r\n    character => String(character.id) === match.params.id\r\n  );\r\n  const character = charactersFilter[0];\r\n\r\n  const onComeBack = () => {\r\n    history.push('/characters');\r\n  };\r\n\r\n  return (\r\n    <StyledCharacterItem>\r\n      <h2 className='title'>{character.name}</h2>\r\n      <div className='character__wrapper'>\r\n        <img src={character.image} alt={character.name} />\r\n        <div className='character__info'>\r\n          <span>Gender: {character.gender}</span>\r\n          <span>Species: {character.species}</span>\r\n          <span>Status: {character.status}</span>\r\n          <span>Location: {character.location.name}</span>\r\n        </div>\r\n      </div>\r\n      <BiArrowBack className='back' onClick={onComeBack} />\r\n    </StyledCharacterItem>\r\n  );\r\n};\r\n\r\nexport default CharacterItem;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledLocationItem = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 50px;\r\n  position: relative;\r\n\r\n  .location__info {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    color: #000;\r\n    background-color: #87cefa;\r\n    border: 3px solid blue;\r\n    border-radius: 50%;\r\n    width: 350px;\r\n    height: 350px;\r\n\r\n    @media (max-width: 400px) {\r\n      width: 300px;\r\n      height: 300px;\r\n    }\r\n\r\n    @media (max-width: 350px) {\r\n      width: 280px;\r\n      height: 280px;\r\n    }\r\n\r\n    span {\r\n      font-size: 18px;\r\n      text-align: center;\r\n      line-height: 1.5;\r\n      max-width: 320px;\r\n      margin-bottom: 10px;\r\n      display: block;\r\n\r\n      @media (max-width: 400px) {\r\n        max-width: 270px;\r\n      }\r\n\r\n      @media (max-width: 350px) {\r\n        max-width: 250px;\r\n      }\r\n    }\r\n  }\r\n\r\n  .back {\r\n    fill: #ccc;\r\n    width: 30px;\r\n    height: 30px;\r\n    top: 0;\r\n    left: 0;\r\n    position: absolute;\r\n    transition: 0.3s;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n      fill: #fff;\r\n    }\r\n  }\r\n`;\r\n","import { useHistory } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { BiArrowBack } from 'react-icons/bi';\r\nimport { StyledLocationItem } from '../styles/components/StyledLocationItem';\r\n\r\nconst LocationsItem = ({ match }) => {\r\n  const history = useHistory();\r\n  const locations = useSelector(({ locations }) => locations.locations);\r\n\r\n  const locationsFilter = locations.filter(\r\n    location => String(location.id) === match.params.id\r\n  );\r\n  const location = locationsFilter[0];\r\n\r\n  const onComeBack = () => {\r\n    history.push('/locations');\r\n  };\r\n\r\n  return (\r\n    <StyledLocationItem>\r\n      <div className='location__info'>\r\n        <span>Name: {location.name}</span>\r\n        <span>Type: {location.type}</span>\r\n        <span>Dimension: {location.dimension}</span>\r\n      </div>\r\n      <BiArrowBack className='back' onClick={onComeBack} />\r\n    </StyledLocationItem>\r\n  );\r\n};\r\n\r\nexport default LocationsItem;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledEpisodeItem = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 50px;\r\n  position: relative;\r\n\r\n  .episode__info {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border: 3px solid #ccc;\r\n    width: 500px;\r\n    padding: 5px 10px;\r\n    max-width: 100%;\r\n    height: 250px;\r\n\r\n    @media (max-width: 800px) {\r\n      width: 400px;\r\n      height: 225px;\r\n    }\r\n\r\n    @media (max-width: 550px) {\r\n      margin-top: 50px;\r\n    }\r\n\r\n    @media (max-width: 450px) {\r\n      align-items: flex-start;\r\n      height: 180px;\r\n    }\r\n\r\n    span {\r\n      font-size: 20px;\r\n      margin-bottom: 10px;\r\n      display: block;\r\n    }\r\n  }\r\n\r\n  .back {\r\n    fill: #ccc;\r\n    width: 30px;\r\n    height: 30px;\r\n    top: 0;\r\n    left: 0;\r\n    position: absolute;\r\n    transition: 0.3s;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n      fill: #fff;\r\n    }\r\n  }\r\n`;\r\n","import { useHistory } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { BiArrowBack } from 'react-icons/bi';\r\nimport { StyledEpisodeItem } from '../styles/components/StyledEpisodeItem';\r\n\r\nconst EpisodeItem = ({ match }) => {\r\n  const history = useHistory();\r\n  const episodes = useSelector(({ episodes }) => episodes.episodes);\r\n\r\n  const episodesFilter = episodes.filter(\r\n    episode => String(episode.id) === match.params.id\r\n  );\r\n  const episode = episodesFilter[0];\r\n\r\n  const onComeBack = () => {\r\n    history.push('/episodes');\r\n  };\r\n\r\n  return (\r\n    <StyledEpisodeItem>\r\n      <div className='episode__info'>\r\n        <span>Episode: {episode.episode}</span>\r\n        <span>Name: {episode.name}</span>\r\n        <span>Air date: {episode.air_date}</span>\r\n      </div>\r\n      <BiArrowBack className='back' onClick={onComeBack} />\r\n    </StyledEpisodeItem>\r\n  );\r\n};\r\n\r\nexport default EpisodeItem;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledCharacters = styled.div`\r\n  .search__wrapper {\r\n    display: flex;\r\n    justify-content: center;\r\n\r\n    input {\r\n      font-size: 18px;\r\n      width: 310px;\r\n      max-width: 100%;\r\n      padding: 5px 15px;\r\n      border: none;\r\n      outline: none;\r\n      cursor: pointer;\r\n\r\n      @media (max-width: 400px) {\r\n        width: 200px;\r\n      }\r\n    }\r\n\r\n    button {\r\n      font-size: 24px;\r\n      color: rgb(255, 255, 255);\r\n      background-color: #87cefa;\r\n      padding: 7px 20px;\r\n      border: none;\r\n      outline-color: #87cefa;\r\n      cursor: pointer;\r\n\r\n      @media (max-width: 400px) {\r\n        padding: 7px 10px;\r\n      }\r\n    }\r\n  }\r\n\r\n  .characters__list {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-between;\r\n    padding: 0;\r\n\r\n    @media (max-width: 1200px) {\r\n      justify-content: center;\r\n    }\r\n\r\n    li {\r\n      text-align: center;\r\n      list-style: none;\r\n\r\n      @media (max-width: 1200px) {\r\n        margin: 0 15px;\r\n      }\r\n    }\r\n\r\n    h4 {\r\n      font-size: 16px;\r\n      max-width: 275px;\r\n    }\r\n\r\n    img {\r\n      width: 275px;\r\n      max-width: 100%;\r\n      display: block;\r\n      border-radius: 5px;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n","import { useState, useEffect, useCallback, useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  getSearchCharacters,\r\n  getMoreCharacters,\r\n  getCharacters\r\n} from '../redux/ducks/charactersDucks';\r\nimport { StyledCharacters } from '../styles/pages/StyledCharacters';\r\n\r\nconst Characters = () => {\r\n  const [loadMore, setLoadMore] = useState(true);\r\n  const [search, setSearch] = useState('');\r\n  const history = useHistory();\r\n  const { characters, url } = useSelector(({ characters }) => characters);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getCharacters());\r\n  }, [dispatch]);\r\n\r\n  const observer = useRef();\r\n  const lastCharacter = useCallback(\r\n    character => {\r\n      if (observer.current) observer.current.disconnect();\r\n      observer.current = new IntersectionObserver(entries => {\r\n        if (entries[0].isIntersecting && url && loadMore) {\r\n          dispatch(getMoreCharacters(url));\r\n        }\r\n      });\r\n      if (character) observer.current.observe(character);\r\n    },\r\n    [url, loadMore, dispatch]\r\n  );\r\n\r\n  const onFindCharacter = e => {\r\n    e.preventDefault();\r\n    if (!search.trim()) {\r\n      setLoadMore(true);\r\n      dispatch(getCharacters());\r\n    } else {\r\n      setLoadMore(false);\r\n      dispatch(getSearchCharacters(search));\r\n    }\r\n  };\r\n\r\n  const onEdit = id => {\r\n    history.push(`/characters/${id}`);\r\n  };\r\n\r\n  return (\r\n    <StyledCharacters>\r\n      <form className='search__wrapper'>\r\n        <input\r\n          type='text'\r\n          onChange={e => setSearch(e.target.value)}\r\n          input={search}\r\n          placeholder='Search characters'\r\n        />\r\n        <button onClick={onFindCharacter}>Search</button>\r\n      </form>\r\n      <ul className='characters__list'>\r\n        {characters &&\r\n          characters.map((character, index) => {\r\n            if (characters.length === index + 1) {\r\n              return (\r\n                <li ref={lastCharacter} key={`${character.id}-${index}`}>\r\n                  <h4>{character.name}</h4>\r\n                  <img\r\n                    src={character.image}\r\n                    alt={character.name}\r\n                    onClick={() => onEdit(character.id)}\r\n                  />\r\n                </li>\r\n              );\r\n            } else {\r\n              return (\r\n                <li key={`${character.id}-${index}`}>\r\n                  <h4>{character.name}</h4>\r\n                  <img\r\n                    src={character.image}\r\n                    alt={character.name}\r\n                    onClick={() => onEdit(character.id)}\r\n                  />\r\n                </li>\r\n              );\r\n            }\r\n          })}\r\n      </ul>\r\n    </StyledCharacters>\r\n  );\r\n};\r\n\r\nexport default Characters;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledLocations = styled.div`\r\n  .search__wrapper {\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-bottom: 50px;\r\n\r\n    input {\r\n      font-size: 18px;\r\n      width: 310px;\r\n      max-width: 100%;\r\n      padding: 5px 15px;\r\n      border: none;\r\n      outline: none;\r\n      cursor: pointer;\r\n\r\n      @media (max-width: 400px) {\r\n        width: 200px;\r\n      }\r\n    }\r\n\r\n    button {\r\n      font-size: 24px;\r\n      color: rgb(255, 255, 255);\r\n      background-color: #87cefa;\r\n      padding: 7px 20px;\r\n      border: none;\r\n      outline-color: #87cefa;\r\n      cursor: pointer;\r\n\r\n      @media (max-width: 400px) {\r\n        padding: 7px 10px;\r\n      }\r\n    }\r\n  }\r\n\r\n  .locations__list {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-between;\r\n    padding: 0;\r\n\r\n    @media (max-width: 1200px) {\r\n      justify-content: center;\r\n    }\r\n\r\n    li {\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      width: 275px;\r\n      height: 125px;\r\n      max-width: 100%;\r\n      text-align: center;\r\n      list-style: none;\r\n      margin-bottom: 25px;\r\n      padding: 5px 10px;\r\n      border: 1px dashed #ccc;\r\n      border-radius: 5px;\r\n      cursor: pointer;\r\n\r\n      @media (max-width: 1200px) {\r\n        margin: 0 20px 20px;\r\n      }\r\n    }\r\n\r\n    h4 {\r\n      font-size: 18px;\r\n      line-height: 1.5;\r\n    }\r\n  }\r\n`;\r\n","import { useState, useEffect, useCallback, useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  getLocations,\r\n  getMoreLocations,\r\n  getSearchLocations\r\n} from '../redux/ducks/locationsDucks';\r\nimport { StyledLocations } from '../styles/pages/StyledLocations';\r\n\r\nconst Locations = () => {\r\n  const [loadMore, setLoadMore] = useState(true);\r\n  const [search, setSearch] = useState('');\r\n  const history = useHistory();\r\n  const { locations, url } = useSelector(({ locations }) => locations);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getLocations());\r\n  }, [dispatch]);\r\n\r\n  const observer = useRef();\r\n  const lastLocation = useCallback(\r\n    character => {\r\n      if (observer.current) observer.current.disconnect();\r\n      observer.current = new IntersectionObserver(entries => {\r\n        if (entries[0].isIntersecting && url && loadMore) {\r\n          dispatch(getMoreLocations(url));\r\n        }\r\n      });\r\n      if (character) observer.current.observe(character);\r\n    },\r\n    [url, loadMore, dispatch]\r\n  );\r\n\r\n  const onFindLocation = e => {\r\n    e.preventDefault();\r\n    if (!search.trim()) {\r\n      setLoadMore(true);\r\n      dispatch(getLocations());\r\n    } else {\r\n      setLoadMore(false);\r\n      dispatch(getSearchLocations(search));\r\n    }\r\n  };\r\n\r\n  const onEdit = id => {\r\n    history.push(`/locations/${id}`);\r\n  };\r\n\r\n  return (\r\n    <StyledLocations>\r\n      <form className='search__wrapper'>\r\n        <input\r\n          type='text'\r\n          onChange={e => setSearch(e.target.value)}\r\n          input={search}\r\n          placeholder='Search locations'\r\n        />\r\n        <button onClick={onFindLocation}>Search</button>\r\n      </form>\r\n      <ul className='locations__list'>\r\n        {locations &&\r\n          locations.map((location, index) => {\r\n            if (locations.length === index + 1) {\r\n              return (\r\n                <li\r\n                  onClick={() => onEdit(location.id)}\r\n                  ref={lastLocation}\r\n                  key={`${location.id}-${index}`}\r\n                >\r\n                  <h4>{location.name}</h4>\r\n                </li>\r\n              );\r\n            } else {\r\n              return (\r\n                <li\r\n                  onClick={() => onEdit(location.id)}\r\n                  key={`${location.id}-${index}`}\r\n                >\r\n                  <h4>{location.name}</h4>\r\n                </li>\r\n              );\r\n            }\r\n          })}\r\n      </ul>\r\n    </StyledLocations>\r\n  );\r\n};\r\n\r\nexport default Locations;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledEpisodes = styled.div`\r\n  .search__wrapper {\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-bottom: 50px;\r\n\r\n    input {\r\n      font-size: 18px;\r\n      width: 310px;\r\n      max-width: 100%;\r\n      padding: 5px 15px;\r\n      border: none;\r\n      outline: none;\r\n      cursor: pointer;\r\n\r\n      @media (max-width: 400px) {\r\n        width: 200px;\r\n      }\r\n    }\r\n\r\n    button {\r\n      font-size: 24px;\r\n      color: rgb(255, 255, 255);\r\n      background-color: #87cefa;\r\n      padding: 7px 20px;\r\n      border: none;\r\n      outline-color: #87cefa;\r\n      cursor: pointer;\r\n\r\n      @media (max-width: 400px) {\r\n        padding: 7px 10px;\r\n      }\r\n    }\r\n  }\r\n\r\n  .episodes__list {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-between;\r\n    padding: 0;\r\n\r\n    @media (max-width: 1200px) {\r\n      justify-content: center;\r\n    }\r\n\r\n    li {\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      text-align: center;\r\n      list-style: none;\r\n      width: 275px;\r\n      height: 100px;\r\n      margin-bottom: 25px;\r\n      padding: 5px 10px;\r\n      border: 2px solid #ccc;\r\n      cursor: pointer;\r\n\r\n      @media (max-width: 1200px) {\r\n        margin: 0 20px 20px;\r\n      }\r\n    }\r\n\r\n    h4 {\r\n      font-size: 16px;\r\n      line-height: 1.5;\r\n      max-width: 275px;\r\n    }\r\n  }\r\n`;\r\n","import { useState, useEffect, useCallback, useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  getEpisodes,\r\n  getMoreEpisodes,\r\n  getSearchEpisodes\r\n} from '../redux/ducks/episodesDucks';\r\nimport { StyledEpisodes } from '../styles/pages/StyledEpisodes';\r\n\r\nconst Episodes = () => {\r\n  const [loadMore, setLoadMore] = useState(true);\r\n  const [search, setSearch] = useState('');\r\n  const history = useHistory();\r\n  const { episodes, url } = useSelector(({ episodes }) => episodes);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getEpisodes());\r\n  }, [dispatch]);\r\n\r\n  const observer = useRef();\r\n  const lastEpisode = useCallback(\r\n    character => {\r\n      if (observer.current) observer.current.disconnect();\r\n      observer.current = new IntersectionObserver(entries => {\r\n        if (entries[0].isIntersecting && url && loadMore) {\r\n          dispatch(getMoreEpisodes(url));\r\n        }\r\n      });\r\n      if (character) observer.current.observe(character);\r\n    },\r\n    [url, loadMore, dispatch]\r\n  );\r\n\r\n  const onFindEpisode = e => {\r\n    e.preventDefault();\r\n    if (!search.trim()) {\r\n      setLoadMore(true);\r\n      dispatch(getEpisodes());\r\n    } else {\r\n      setLoadMore(false);\r\n      dispatch(getSearchEpisodes(search));\r\n    }\r\n  };\r\n\r\n  const onEdit = id => {\r\n    history.push(`/episodes/${id}`);\r\n  };\r\n\r\n  return (\r\n    <StyledEpisodes>\r\n      <form className='search__wrapper'>\r\n        <input\r\n          type='text'\r\n          onChange={e => setSearch(e.target.value)}\r\n          input={search}\r\n          placeholder='Search episodes'\r\n        />\r\n        <button onClick={onFindEpisode}>Search</button>\r\n      </form>\r\n      <ul className='episodes__list'>\r\n        {episodes &&\r\n          episodes.map((episode, index) => {\r\n            if (episodes.length === index + 1) {\r\n              return (\r\n                <li\r\n                  onClick={() => onEdit(episode.id)}\r\n                  ref={lastEpisode}\r\n                  key={`${episode.id}-${index}`}\r\n                >\r\n                  <h4>{episode.episode}</h4>\r\n                </li>\r\n              );\r\n            } else {\r\n              return (\r\n                <li\r\n                  onClick={() => onEdit(episode.id)}\r\n                  key={`${episode.id}-${index}`}\r\n                >\r\n                  <h4>{episode.episode}</h4>\r\n                </li>\r\n              );\r\n            }\r\n          })}\r\n      </ul>\r\n    </StyledEpisodes>\r\n  );\r\n};\r\n\r\nexport default Episodes;\r\n","import { createGlobalStyle } from 'styled-components';\r\nimport { normalize } from 'styled-normalize';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  ${normalize}\r\n\r\n  html {\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  *,\r\n  *:before,\r\n  *:after {\r\n    box-sizing: inherit;\r\n  }\r\n  \r\n  body {\r\n    font-family: 'Open Sans', sans-serif;\r\n    max-width: 1200px;\r\n    padding: 0 25px;\r\n    margin: 0 auto;\r\n    color: #eee;\r\n    background-color: #080808;\r\n    min-height: 100vh;\r\n  }\r\n`;\r\n","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Header, CharacterItem, LocationItem, EpisodeItem } from './components';\nimport { Characters, Locations, Episodes } from './pages';\nimport { GlobalStyle } from './styles/GlobalStyle';\n\nconst App = () => {\n  return (\n    <Router>\n      <GlobalStyle />\n      <Header />\n      <Switch>\n        <Route exact path='/characters' component={Characters} />\n        <Route exact path='/characters/:id' component={CharacterItem} />\n        <Route exact path='/locations' component={Locations} />\n        <Route exact path='/locations/:id' component={LocationItem} />\n        <Route exact path='/episodes' component={Episodes} />\n        <Route exact path='/episodes/:id' component={EpisodeItem} />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}